{"version":3,"file":"DevMenuButton.js","sourceRoot":"","sources":["../../../src/app/views/DevMenuButton.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { TouchableOpacity as TouchableOpacityGH } from 'react-native-gesture-handler';\nimport { Platform, StyleSheet, TouchableOpacity as TouchableOpacityRN, View } from 'react-native';\n\nimport { StyledText } from '../components/Text';\n\ntype Props = {\n  buttonKey: string;\n  label: string;\n  onPress: (key: string) => any;\n  icon?: string;\n  isEnabled?: boolean;\n  detail?: string;\n};\n\n// When rendered inside bottom sheet, touchables from RN don't work on Android, but the ones from GH don't work on iOS.\nconst TouchableOpacity = Platform.OS === 'android' ? TouchableOpacityGH : TouchableOpacityRN;\n\nconst LIGHT_DISABLED_TEXT_COLOR = '#9ca0a6';\nconst DARK_DISABLED_TEXT_COLOR = 'rgba(255, 255, 255, 0.7)';\n\nclass DevMenuButton extends React.PureComponent<Props, any> {\n  static defaultProps = {\n    isEnabled: true,\n  };\n\n  state = {\n    showDetails: true,\n  };\n\n  onPress = () => {\n    if (this.props.onPress) {\n      this.props.onPress(this.props.buttonKey);\n    }\n  };\n\n  renderButtonIcon(icon: string | undefined, isEnabled: boolean) {\n    if (!icon) {\n      return null;\n    }\n\n    return (\n      <View style={styles.buttonIcon}>\n        <MaterialCommunityIcons name={icon} size={20} color={isEnabled ? '#2F9BE4' : '#888'} />\n      </View>\n    );\n  }\n\n  renderLabel(label: string, enabled: boolean) {\n    if (enabled) {\n      return (\n        <StyledText style={styles.buttonText} lightColor=\"#595c68\">\n          {label}\n        </StyledText>\n      );\n    } else {\n      return (\n        <StyledText\n          style={styles.buttonText}\n          lightColor={LIGHT_DISABLED_TEXT_COLOR}\n          darkColor={DARK_DISABLED_TEXT_COLOR}>\n          {label}\n        </StyledText>\n      );\n    }\n  }\n\n  renderDetail(detail?: string) {\n    return (\n      <StyledText\n        style={[styles.buttonText, styles.buttonDetailsText]}\n        darkColor={DARK_DISABLED_TEXT_COLOR}\n        lightColor={LIGHT_DISABLED_TEXT_COLOR}>\n        {detail ? detail : 'Only available in development mode.'}\n      </StyledText>\n    );\n  }\n\n  render() {\n    const { label, icon, isEnabled, detail } = this.props;\n    const { showDetails } = this.state;\n\n    return (\n      <TouchableOpacity style={styles.button} onPress={this.onPress} disabled={!isEnabled}>\n        {this.renderButtonIcon(icon, !!isEnabled)}\n\n        <View style={styles.buttonRow}>\n          {this.renderLabel(label, !!isEnabled)}\n          {!isEnabled && showDetails && this.renderDetail(detail)}\n        </View>\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    flexDirection: 'row',\n    paddingVertical: 10,\n  },\n  buttonRow: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'space-around',\n    alignItems: 'flex-start',\n    paddingRight: 20,\n  },\n  buttonIcon: {\n    marginLeft: 20,\n    marginRight: 8,\n    marginTop: 2,\n  },\n  buttonText: {\n    fontSize: 14,\n    textAlign: 'left',\n    fontWeight: '700',\n  },\n  buttonDetailsText: {\n    marginTop: 1,\n    fontSize: 12,\n    fontWeight: 'normal',\n  },\n});\n\nexport default DevMenuButton;\n"]}