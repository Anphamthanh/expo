{"version":3,"file":"DevMenuTaskInfo.js","sourceRoot":"","sources":["../../../src/app/views/DevMenuTaskInfo.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Image, StyleSheet, Text, View } from 'react-native';\n\nimport DevIndicator from '../components/DevIndicator';\nimport { StyledText } from '../components/Text';\n\ntype Props = {\n  task: { [key: string]: any };\n};\n\nclass DevMenuTaskInfo extends React.PureComponent<Props, any> {\n  _maybeRenderDevServerName() {\n    const { task } = this.props;\n    const devServerName =\n      task && task.manifest && task.manifest.developer ? task.manifest.developer.tool : null;\n\n    if (devServerName) {\n      return (\n        <View style={styles.taskDevServerRow}>\n          <DevIndicator style={styles.taskDevServerIndicator} isActive isNetworkAvailable />\n          <Text style={styles.taskDevServerName}>{devServerName}</Text>\n        </View>\n      );\n    }\n    return null;\n  }\n\n  render() {\n    const { task } = this.props;\n    const taskUrl = task.manifestUrl ?? '';\n    const iconUrl = task.manifest && task.manifest.iconUrl;\n    const taskName = task.manifest && task.manifest.name;\n    const taskNameStyles = taskName ? styles.taskName : [styles.taskName, { color: '#c5c6c7' }];\n    const sdkVersion = task.manifest && task.manifest.sdkVersion;\n\n    return (\n      <View style={styles.taskMetaRow}>\n        <View style={styles.taskIconColumn}>\n          {iconUrl ? (\n            <Image source={{ uri: iconUrl }} style={styles.taskIcon} />\n          ) : (\n            <View style={[styles.taskIcon, { backgroundColor: '#eee' }]} />\n          )}\n        </View>\n        <View style={styles.taskInfoColumn}>\n          <StyledText style={taskNameStyles} numberOfLines={1} lightColor=\"#595c68\">\n            {taskName ? taskName : 'Untitled Experience'}\n          </StyledText>\n          <Text style={[styles.taskUrl]} numberOfLines={1}>\n            {taskUrl}\n          </Text>\n          {sdkVersion && (\n            <StyledText style={styles.taskSdkVersion}>\n              SDK: <Text style={styles.taskSdkVersionBold}>{sdkVersion}</Text>\n            </StyledText>\n          )}\n          {this._maybeRenderDevServerName()}\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  taskMetaRow: {\n    flexDirection: 'row',\n    paddingHorizontal: 14,\n    paddingBottom: 12,\n  },\n  taskInfoColumn: {\n    flex: 4,\n    justifyContent: 'center',\n  },\n  taskIconColumn: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  taskName: {\n    backgroundColor: 'transparent',\n    fontWeight: '700',\n    fontSize: 16,\n    marginTop: 14,\n    marginBottom: 1,\n    marginRight: 24,\n  },\n  taskUrl: {\n    color: '#9ca0a6',\n    backgroundColor: 'transparent',\n    marginRight: 16,\n    marginBottom: 2,\n    marginTop: 1,\n    fontSize: 11,\n  },\n  taskSdkVersion: {\n    color: '#9ca0a6',\n    fontSize: 11,\n  },\n  taskSdkVersionBold: {\n    fontWeight: 'bold',\n  },\n  taskIcon: {\n    width: 52,\n    height: 52,\n    marginTop: 12,\n    marginRight: 10,\n    alignSelf: 'center',\n    backgroundColor: 'transparent',\n  },\n  taskDevServerRow: {\n    flexDirection: 'row',\n  },\n  taskDevServerName: {\n    fontSize: 11,\n    color: '#9ca0a6',\n    fontWeight: '700',\n  },\n  taskDevServerIndicator: {\n    marginTop: 4,\n    marginRight: 7,\n  },\n});\n\nexport default DevMenuTaskInfo;\n"]}