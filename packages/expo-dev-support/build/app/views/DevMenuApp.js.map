{"version":3,"file":"DevMenuApp.js","sourceRoot":"","sources":["../../../src/app/views/DevMenuApp.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;AAC1C,OAAO,EAAE,kBAAkB,EAAE,cAAc,EAAmB,MAAM,yBAAyB,CAAC;AAC9F,OAAO,EAAE,YAAY,EAAE,MAAM,kBAAkB,CAAC;AAEhD,OAAO,KAAK,kBAAkB,MAAM,uBAAuB,CAAC;AAC5D,OAAO,kBAAkB,MAAM,sBAAsB,CAAC;AACtD,OAAO,WAAW,MAAM,eAAe,CAAC;AAExC,SAAS,eAAe,CAAC,QAAQ;IAC/B,MAAM,CAAC,QAAQ,EAAE,WAAW,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IAEnD,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE;QACnB,KAAK,UAAU,eAAe;YAC5B,MAAM,QAAQ,GAAG,MAAM,kBAAkB,CAAC,gBAAgB,EAAE,CAAC;YAC7D,WAAW,CAAC,QAAQ,CAAC,CAAC;QACxB,CAAC;QAED,eAAe,EAAE,CAAC;IACpB,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC;IAEf,OAAO,QAAQ,CAAC;AAClB,CAAC;AAED,MAAM,CAAC,OAAO,OAAO,WAAY,SAAQ,KAAK,CAAC,aAAuB;IACpE,MAAM;QACJ,OAAO,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,EAAG,CAAC;IACxC,CAAC;CACF;AAED,SAAS,UAAU,CAAC,KAAK;IACvB,MAAM,WAAW,GAAG,cAAc,EAAE,CAAC;IACrC,MAAM,EAAE,mBAAmB,GAAG,eAAe,EAAE,GAAG,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAE9E,IAAI,KAAK,GACP,mBAAmB,KAAK,eAAe,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,mBAAmB,CAAC;IAC9E,IAAI,KAAK,KAAK,eAAe,EAAE;QAC7B,KAAK,GAAG,OAAO,CAAC;KACjB;IAED,OAAO,CACL,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CACzC;MAAA,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CACnC;QAAA,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAClC;UAAA,CAAC,WAAW,CAAC,IAAI,KAAK,CAAC,EACzB;QAAA,EAAE,YAAY,CAAC,QAAQ,CACzB;MAAA,EAAE,kBAAkB,CACtB;IAAA,EAAE,kBAAkB,CAAC,CACtB,CAAC;AACJ,CAAC;AAED,MAAM,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;IAC/B,QAAQ,EAAE;QACR,IAAI,EAAE,CAAC;KACR;CACF,CAAC,CAAC","sourcesContent":["import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { AppearanceProvider, useColorScheme, ColorSchemeName } from 'react-native-appearance';\nimport { ThemeContext } from 'react-navigation';\n\nimport * as DevSupportInternal from '../DevSupportInternal';\nimport DevMenuBottomSheet from './DevMenuBottomSheet';\nimport DevMenuView from './DevMenuView';\n\nfunction useUserSettings(renderId): DevSupportInternal.DevMenuSettingsType {\n  const [settings, setSettings] = React.useState({});\n\n  React.useEffect(() => {\n    async function getUserSettings() {\n      const settings = await DevSupportInternal.getSettingsAsync();\n      setSettings(settings);\n    }\n\n    getUserSettings();\n  }, [renderId]);\n\n  return settings;\n}\n\nexport default class DevMenuRoot extends React.PureComponent<any, any> {\n  render() {\n    return <DevMenuApp {...this.props} />;\n  }\n}\n\nfunction DevMenuApp(props) {\n  const colorScheme = useColorScheme();\n  const { preferredAppearance = 'no-preference' } = useUserSettings(props.uuid);\n\n  let theme: ColorSchemeName =\n    preferredAppearance === 'no-preference' ? colorScheme : preferredAppearance;\n  if (theme === 'no-preference') {\n    theme = 'light';\n  }\n\n  return (\n    <AppearanceProvider style={styles.rootView}>\n      <DevMenuBottomSheet uuid={props.uuid}>\n        <ThemeContext.Provider value={theme}>\n          <DevMenuView {...props} />\n        </ThemeContext.Provider>\n      </DevMenuBottomSheet>\n    </AppearanceProvider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  rootView: {\n    flex: 1,\n  },\n});\n"]}